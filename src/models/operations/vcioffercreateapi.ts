/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const VciOfferCreateApiServerList = [
  /**
   * ðŸ‡ºðŸ‡¸ US Cluster
   */
  "https://us.authlete.com",
  /**
   * ðŸ‡¯ðŸ‡µ Japan Cluster
   */
  "https://jp.authlete.com",
  /**
   * ðŸ‡ªðŸ‡º Europe Cluster
   */
  "https://eu.authlete.com",
  /**
   * ðŸ‡§ðŸ‡· Brazil Cluster
   */
  "https://br.authlete.com",
] as const;

export type VciOfferCreateApiPropertyRequest = {
  /**
   * The key part.
   */
  key?: string | undefined;
  /**
   * The value part.
   */
  value?: string | undefined;
  /**
   * The flag to indicate whether this property hidden from or visible to client applications.
   *
   * @remarks
   * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
   */
  hidden?: boolean | undefined;
};

export type VciOfferCreateApiRequestBody = {
  /**
   * The value of the `credentials` object in the JSON format.
   */
  credentials?: string | undefined;
  /**
   * The flag indicating whether the `authorization_code` object is
   *
   * @remarks
   * included in the `grants` object.
   */
  authorizationCodeGrantIncluded?: boolean | undefined;
  /**
   * The flag indicating whether the `issuer_state` property is
   *
   * @remarks
   * included in the `authorization_code` object in the `grants`
   * object.
   */
  issuerStateIncluded?: boolean | undefined;
  /**
   * The flag to include the
   *
   * @remarks
   * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object
   * in the `grants` object.
   */
  preAuthorizedCodeGrantIncluded?: boolean | undefined;
  /**
   * The value of the `user_pin_required` property in the
   *
   * @remarks
   * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
   * the `grants` object.
   */
  userPinRequired?: boolean | undefined;
  /**
   * The length of the user PIN to generate.
   */
  userPinLength?: number | undefined;
  /**
   * The subject associated with the credential offer.
   */
  subject?: string | undefined;
  /**
   * The duration of the credential offer.
   */
  duration?: number | undefined;
  /**
   * The general-purpose arbitrary string.
   */
  context?: string | undefined;
  /**
   * Extra properties to associate with the credential offer.
   */
  properties?: Array<VciOfferCreateApiPropertyRequest> | undefined;
  /**
   * Additional claims that are added to the payload part of the JWT
   *
   * @remarks
   * access token.
   */
  jwtAtClaims?: string | undefined;
  /**
   * The time at which the user authentication was performed during
   *
   * @remarks
   * the course of issuing the credential offer.
   */
  authTime?: number | undefined;
  /**
   * The Authentication Context Class Reference of the user authentication
   *
   * @remarks
   * performed during the course of issuing the credential offer.
   */
  acr?: string | undefined;
};

export type VciOfferCreateApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  requestBody: VciOfferCreateApiRequestBody;
};

/**
 * The result of the `/vci/offer/create` API call.
 */
export const VciOfferCreateApiAction = {
  Created: "CREATED",
  Forbidden: "FORBIDDEN",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/vci/offer/create` API call.
 */
export type VciOfferCreateApiAction = ClosedEnum<
  typeof VciOfferCreateApiAction
>;

export type VciOfferCreateApiInfoProperty = {
  /**
   * The key part.
   */
  key?: string | undefined;
  /**
   * The value part.
   */
  value?: string | undefined;
  /**
   * The flag to indicate whether this property hidden from or visible to client applications.
   *
   * @remarks
   * If `true`, this property is hidden from client applications. Otherwise, this property is visible to client applications.
   */
  hidden?: boolean | undefined;
};

export type VciOfferCreateApiInfo = {
  /**
   * The identifier of the credential offer.
   */
  identifier?: string | undefined;
  /**
   * The credential offer in the JSON format.
   */
  credentialOffer?: string | undefined;
  /**
   * The identifier of the credential issuer.
   */
  credentialIssuer?: string | undefined;
  /**
   * The value of the `credentials` object in the JSON format.
   */
  credentials?: string | undefined;
  /**
   * The flag indicating whether the `authorization_code` object is
   *
   * @remarks
   * included in the `grants` object.
   */
  authorizationCodeGrantIncluded?: boolean | undefined;
  /**
   * The flag indicating whether the `issuer_state` property is
   *
   * @remarks
   * included in the `authorization_code` object in the `grants`
   * object.
   */
  issuerStateIncluded?: boolean | undefined;
  /**
   * The value of the `issuer_state` property in the
   *
   * @remarks
   * `authorization_code` object in the `grants` object.
   */
  issuerState?: string | undefined;
  /**
   * The flag indicating whether the
   *
   * @remarks
   * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object is
   * included in the `grants` object.
   */
  preAuthorizedCodeGrantIncluded?: boolean | undefined;
  /**
   * The value of the `pre-authorized_code` property in the
   *
   * @remarks
   * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
   * the `grants` object.
   */
  preAuthorizedCode?: string | undefined;
  /**
   * The value of the `user_pin_required` property in the
   *
   * @remarks
   * `urn:ietf:params:oauth:grant-type:pre-authorized_code` object in
   * the `grants` object.
   */
  userPinRequired?: boolean | undefined;
  /**
   * The value of the user PIN associated with the credential offer.
   */
  userPin?: string | undefined;
  /**
   * The subject associated with the credential offer.
   */
  subject?: string | undefined;
  /**
   * The time at which the credential offer will expire.
   */
  expiresAt?: number | undefined;
  /**
   * The general-purpose arbitrary string.
   */
  context?: string | undefined;
  /**
   * Extra properties to associate with the credential offer.
   */
  properties?: Array<VciOfferCreateApiInfoProperty> | undefined;
  /**
   * Additional claims that are added to the payload part of the JWT
   *
   * @remarks
   * access token.
   */
  jwtAtClaims?: string | undefined;
  /**
   * The time at which the user authentication was performed during
   *
   * @remarks
   * the course of issuing the credential offer.
   */
  authTime?: number | undefined;
  /**
   * The Authentication Context Class Reference of the user authentication
   *
   * @remarks
   * performed during the course of issuing the credential offer.
   */
  acr?: string | undefined;
};

export type VciOfferCreateApiResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The result of the `/vci/offer/create` API call.
   */
  action?: VciOfferCreateApiAction | undefined;
  info?: VciOfferCreateApiInfo | undefined;
};

/** @internal */
export const VciOfferCreateApiPropertyRequest$inboundSchema: z.ZodType<
  VciOfferCreateApiPropertyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string().optional(),
  value: z.string().optional(),
  hidden: z.boolean().optional(),
});

/** @internal */
export type VciOfferCreateApiPropertyRequest$Outbound = {
  key?: string | undefined;
  value?: string | undefined;
  hidden?: boolean | undefined;
};

/** @internal */
export const VciOfferCreateApiPropertyRequest$outboundSchema: z.ZodType<
  VciOfferCreateApiPropertyRequest$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiPropertyRequest
> = z.object({
  key: z.string().optional(),
  value: z.string().optional(),
  hidden: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiPropertyRequest$ {
  /** @deprecated use `VciOfferCreateApiPropertyRequest$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiPropertyRequest$inboundSchema;
  /** @deprecated use `VciOfferCreateApiPropertyRequest$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiPropertyRequest$outboundSchema;
  /** @deprecated use `VciOfferCreateApiPropertyRequest$Outbound` instead. */
  export type Outbound = VciOfferCreateApiPropertyRequest$Outbound;
}

export function vciOfferCreateApiPropertyRequestToJSON(
  vciOfferCreateApiPropertyRequest: VciOfferCreateApiPropertyRequest,
): string {
  return JSON.stringify(
    VciOfferCreateApiPropertyRequest$outboundSchema.parse(
      vciOfferCreateApiPropertyRequest,
    ),
  );
}

export function vciOfferCreateApiPropertyRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiPropertyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiPropertyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiPropertyRequest' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiRequestBody$inboundSchema: z.ZodType<
  VciOfferCreateApiRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  credentials: z.string().optional(),
  authorizationCodeGrantIncluded: z.boolean().optional(),
  issuerStateIncluded: z.boolean().optional(),
  preAuthorizedCodeGrantIncluded: z.boolean().optional(),
  userPinRequired: z.boolean().optional(),
  userPinLength: z.number().int().optional(),
  subject: z.string().optional(),
  duration: z.number().int().optional(),
  context: z.string().optional(),
  properties: z.array(
    z.lazy(() => VciOfferCreateApiPropertyRequest$inboundSchema),
  ).optional(),
  jwtAtClaims: z.string().optional(),
  authTime: z.number().int().optional(),
  acr: z.string().optional(),
});

/** @internal */
export type VciOfferCreateApiRequestBody$Outbound = {
  credentials?: string | undefined;
  authorizationCodeGrantIncluded?: boolean | undefined;
  issuerStateIncluded?: boolean | undefined;
  preAuthorizedCodeGrantIncluded?: boolean | undefined;
  userPinRequired?: boolean | undefined;
  userPinLength?: number | undefined;
  subject?: string | undefined;
  duration?: number | undefined;
  context?: string | undefined;
  properties?: Array<VciOfferCreateApiPropertyRequest$Outbound> | undefined;
  jwtAtClaims?: string | undefined;
  authTime?: number | undefined;
  acr?: string | undefined;
};

/** @internal */
export const VciOfferCreateApiRequestBody$outboundSchema: z.ZodType<
  VciOfferCreateApiRequestBody$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiRequestBody
> = z.object({
  credentials: z.string().optional(),
  authorizationCodeGrantIncluded: z.boolean().optional(),
  issuerStateIncluded: z.boolean().optional(),
  preAuthorizedCodeGrantIncluded: z.boolean().optional(),
  userPinRequired: z.boolean().optional(),
  userPinLength: z.number().int().optional(),
  subject: z.string().optional(),
  duration: z.number().int().optional(),
  context: z.string().optional(),
  properties: z.array(
    z.lazy(() => VciOfferCreateApiPropertyRequest$outboundSchema),
  ).optional(),
  jwtAtClaims: z.string().optional(),
  authTime: z.number().int().optional(),
  acr: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiRequestBody$ {
  /** @deprecated use `VciOfferCreateApiRequestBody$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiRequestBody$inboundSchema;
  /** @deprecated use `VciOfferCreateApiRequestBody$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiRequestBody$outboundSchema;
  /** @deprecated use `VciOfferCreateApiRequestBody$Outbound` instead. */
  export type Outbound = VciOfferCreateApiRequestBody$Outbound;
}

export function vciOfferCreateApiRequestBodyToJSON(
  vciOfferCreateApiRequestBody: VciOfferCreateApiRequestBody,
): string {
  return JSON.stringify(
    VciOfferCreateApiRequestBody$outboundSchema.parse(
      vciOfferCreateApiRequestBody,
    ),
  );
}

export function vciOfferCreateApiRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiRequestBody' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiRequest$inboundSchema: z.ZodType<
  VciOfferCreateApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  RequestBody: z.lazy(() => VciOfferCreateApiRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type VciOfferCreateApiRequest$Outbound = {
  serviceId: string;
  RequestBody: VciOfferCreateApiRequestBody$Outbound;
};

/** @internal */
export const VciOfferCreateApiRequest$outboundSchema: z.ZodType<
  VciOfferCreateApiRequest$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiRequest
> = z.object({
  serviceId: z.string(),
  requestBody: z.lazy(() => VciOfferCreateApiRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiRequest$ {
  /** @deprecated use `VciOfferCreateApiRequest$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiRequest$inboundSchema;
  /** @deprecated use `VciOfferCreateApiRequest$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiRequest$outboundSchema;
  /** @deprecated use `VciOfferCreateApiRequest$Outbound` instead. */
  export type Outbound = VciOfferCreateApiRequest$Outbound;
}

export function vciOfferCreateApiRequestToJSON(
  vciOfferCreateApiRequest: VciOfferCreateApiRequest,
): string {
  return JSON.stringify(
    VciOfferCreateApiRequest$outboundSchema.parse(vciOfferCreateApiRequest),
  );
}

export function vciOfferCreateApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiRequest' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiAction$inboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateApiAction
> = z.nativeEnum(VciOfferCreateApiAction);

/** @internal */
export const VciOfferCreateApiAction$outboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateApiAction
> = VciOfferCreateApiAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiAction$ {
  /** @deprecated use `VciOfferCreateApiAction$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiAction$inboundSchema;
  /** @deprecated use `VciOfferCreateApiAction$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiAction$outboundSchema;
}

/** @internal */
export const VciOfferCreateApiInfoProperty$inboundSchema: z.ZodType<
  VciOfferCreateApiInfoProperty,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string().optional(),
  value: z.string().optional(),
  hidden: z.boolean().optional(),
});

/** @internal */
export type VciOfferCreateApiInfoProperty$Outbound = {
  key?: string | undefined;
  value?: string | undefined;
  hidden?: boolean | undefined;
};

/** @internal */
export const VciOfferCreateApiInfoProperty$outboundSchema: z.ZodType<
  VciOfferCreateApiInfoProperty$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiInfoProperty
> = z.object({
  key: z.string().optional(),
  value: z.string().optional(),
  hidden: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiInfoProperty$ {
  /** @deprecated use `VciOfferCreateApiInfoProperty$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiInfoProperty$inboundSchema;
  /** @deprecated use `VciOfferCreateApiInfoProperty$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiInfoProperty$outboundSchema;
  /** @deprecated use `VciOfferCreateApiInfoProperty$Outbound` instead. */
  export type Outbound = VciOfferCreateApiInfoProperty$Outbound;
}

export function vciOfferCreateApiInfoPropertyToJSON(
  vciOfferCreateApiInfoProperty: VciOfferCreateApiInfoProperty,
): string {
  return JSON.stringify(
    VciOfferCreateApiInfoProperty$outboundSchema.parse(
      vciOfferCreateApiInfoProperty,
    ),
  );
}

export function vciOfferCreateApiInfoPropertyFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiInfoProperty, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiInfoProperty$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiInfoProperty' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiInfo$inboundSchema: z.ZodType<
  VciOfferCreateApiInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  identifier: z.string().optional(),
  credentialOffer: z.string().optional(),
  credentialIssuer: z.string().optional(),
  credentials: z.string().optional(),
  authorizationCodeGrantIncluded: z.boolean().optional(),
  issuerStateIncluded: z.boolean().optional(),
  issuerState: z.string().optional(),
  preAuthorizedCodeGrantIncluded: z.boolean().optional(),
  preAuthorizedCode: z.string().optional(),
  userPinRequired: z.boolean().optional(),
  userPin: z.string().optional(),
  subject: z.string().optional(),
  expiresAt: z.number().int().optional(),
  context: z.string().optional(),
  properties: z.array(z.lazy(() => VciOfferCreateApiInfoProperty$inboundSchema))
    .optional(),
  jwtAtClaims: z.string().optional(),
  authTime: z.number().int().optional(),
  acr: z.string().optional(),
});

/** @internal */
export type VciOfferCreateApiInfo$Outbound = {
  identifier?: string | undefined;
  credentialOffer?: string | undefined;
  credentialIssuer?: string | undefined;
  credentials?: string | undefined;
  authorizationCodeGrantIncluded?: boolean | undefined;
  issuerStateIncluded?: boolean | undefined;
  issuerState?: string | undefined;
  preAuthorizedCodeGrantIncluded?: boolean | undefined;
  preAuthorizedCode?: string | undefined;
  userPinRequired?: boolean | undefined;
  userPin?: string | undefined;
  subject?: string | undefined;
  expiresAt?: number | undefined;
  context?: string | undefined;
  properties?: Array<VciOfferCreateApiInfoProperty$Outbound> | undefined;
  jwtAtClaims?: string | undefined;
  authTime?: number | undefined;
  acr?: string | undefined;
};

/** @internal */
export const VciOfferCreateApiInfo$outboundSchema: z.ZodType<
  VciOfferCreateApiInfo$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiInfo
> = z.object({
  identifier: z.string().optional(),
  credentialOffer: z.string().optional(),
  credentialIssuer: z.string().optional(),
  credentials: z.string().optional(),
  authorizationCodeGrantIncluded: z.boolean().optional(),
  issuerStateIncluded: z.boolean().optional(),
  issuerState: z.string().optional(),
  preAuthorizedCodeGrantIncluded: z.boolean().optional(),
  preAuthorizedCode: z.string().optional(),
  userPinRequired: z.boolean().optional(),
  userPin: z.string().optional(),
  subject: z.string().optional(),
  expiresAt: z.number().int().optional(),
  context: z.string().optional(),
  properties: z.array(
    z.lazy(() => VciOfferCreateApiInfoProperty$outboundSchema),
  ).optional(),
  jwtAtClaims: z.string().optional(),
  authTime: z.number().int().optional(),
  acr: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiInfo$ {
  /** @deprecated use `VciOfferCreateApiInfo$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiInfo$inboundSchema;
  /** @deprecated use `VciOfferCreateApiInfo$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiInfo$outboundSchema;
  /** @deprecated use `VciOfferCreateApiInfo$Outbound` instead. */
  export type Outbound = VciOfferCreateApiInfo$Outbound;
}

export function vciOfferCreateApiInfoToJSON(
  vciOfferCreateApiInfo: VciOfferCreateApiInfo,
): string {
  return JSON.stringify(
    VciOfferCreateApiInfo$outboundSchema.parse(vciOfferCreateApiInfo),
  );
}

export function vciOfferCreateApiInfoFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiInfo' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiResponse$inboundSchema: z.ZodType<
  VciOfferCreateApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateApiAction$inboundSchema.optional(),
  info: z.lazy(() => VciOfferCreateApiInfo$inboundSchema).optional(),
});

/** @internal */
export type VciOfferCreateApiResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  info?: VciOfferCreateApiInfo$Outbound | undefined;
};

/** @internal */
export const VciOfferCreateApiResponse$outboundSchema: z.ZodType<
  VciOfferCreateApiResponse$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateApiAction$outboundSchema.optional(),
  info: z.lazy(() => VciOfferCreateApiInfo$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiResponse$ {
  /** @deprecated use `VciOfferCreateApiResponse$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiResponse$inboundSchema;
  /** @deprecated use `VciOfferCreateApiResponse$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiResponse$outboundSchema;
  /** @deprecated use `VciOfferCreateApiResponse$Outbound` instead. */
  export type Outbound = VciOfferCreateApiResponse$Outbound;
}

export function vciOfferCreateApiResponseToJSON(
  vciOfferCreateApiResponse: VciOfferCreateApiResponse,
): string {
  return JSON.stringify(
    VciOfferCreateApiResponse$outboundSchema.parse(vciOfferCreateApiResponse),
  );
}

export function vciOfferCreateApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiResponse' from JSON`,
  );
}
