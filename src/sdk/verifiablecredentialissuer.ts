/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { verifiableCredentialIssuerBatchIssue } from "../funcs/verifiableCredentialIssuerBatchIssue.js";
import { verifiableCredentialIssuerCreateOffer } from "../funcs/verifiableCredentialIssuerCreateOffer.js";
import { verifiableCredentialIssuerCreateOfferForm } from "../funcs/verifiableCredentialIssuerCreateOfferForm.js";
import { verifiableCredentialIssuerDeferredParse } from "../funcs/verifiableCredentialIssuerDeferredParse.js";
import { verifiableCredentialIssuerDeferredParseForm } from "../funcs/verifiableCredentialIssuerDeferredParseForm.js";
import { verifiableCredentialIssuerIssueDeferred } from "../funcs/verifiableCredentialIssuerIssueDeferred.js";
import { verifiableCredentialIssuerIssueJwt } from "../funcs/verifiableCredentialIssuerIssueJwt.js";
import { verifiableCredentialIssuerIssueJwtForm } from "../funcs/verifiableCredentialIssuerIssueJwtForm.js";
import { verifiableCredentialIssuerJwks } from "../funcs/verifiableCredentialIssuerJwks.js";
import { verifiableCredentialIssuerJwksForm } from "../funcs/verifiableCredentialIssuerJwksForm.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class VerifiableCredentialIssuer extends ClientSDK {
  /**
   * /api/{serviceId}/vci/jwtissuer API
   */
  async issueJwt(
    request: operations.VciJwtissuerApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciJwtissuerApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerIssueJwt(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/jwtissuer API
   */
  async issueJwtForm(
    request: operations.VciJwtissuerApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.VciJwtissuerApiFormResponse> {
    return unwrapAsync(verifiableCredentialIssuerIssueJwtForm(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/jwks API
   */
  async jwks(
    request: operations.VciJwksApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciJwksApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerJwks(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/jwks API
   */
  async jwksForm(
    request: operations.VciJwksApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.VciJwksApiFormResponse> {
    return unwrapAsync(verifiableCredentialIssuerJwksForm(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/offer/create API
   */
  async createOffer(
    request: operations.VciOfferCreateApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciOfferCreateApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerCreateOffer(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/offer/create API
   */
  async createOfferForm(
    request: operations.VciOfferCreateApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.VciOfferCreateApiFormResponse> {
    return unwrapAsync(verifiableCredentialIssuerCreateOfferForm(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/batch/issue API
   */
  async batchIssue(
    request: operations.VciBatchIssueApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciBatchIssueApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerBatchIssue(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/deferred/parse API
   */
  async deferredParse(
    request: operations.VciDeferredParseApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciDeferredParseApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerDeferredParse(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/deferred/parse API
   */
  async deferredParseForm(
    request: operations.VciDeferredParseApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.VciDeferredParseApiFormResponse> {
    return unwrapAsync(verifiableCredentialIssuerDeferredParseForm(
      this,
      request,
      options,
    ));
  }

  /**
   * /api/{serviceId}/vci/deferred/issue API
   */
  async issueDeferred(
    request: operations.VciDeferredIssueApiRequest,
    options?: RequestOptions,
  ): Promise<operations.VciDeferredIssueApiResponse> {
    return unwrapAsync(verifiableCredentialIssuerIssueDeferred(
      this,
      request,
      options,
    ));
  }
}
