/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tokenOperationsDelete } from "../funcs/tokenOperationsDelete.js";
import { tokenOperationsRevokeToken } from "../funcs/tokenOperationsRevokeToken.js";
import { tokenOperationsRevokeTokenForm } from "../funcs/tokenOperationsRevokeTokenForm.js";
import { tokenOperationsUpdateToken } from "../funcs/tokenOperationsUpdateToken.js";
import { tokenOperationsUpdateTokenForm } from "../funcs/tokenOperationsUpdateTokenForm.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TokenOperations extends ClientSDK {
  /**
   * Update Access Token
   *
   * @remarks
   * Update an access token.
   */
  async updateToken(
    request: operations.AuthTokenUpdateApiRequest,
    options?: RequestOptions,
  ): Promise<operations.AuthTokenUpdateApiResponse> {
    return unwrapAsync(tokenOperationsUpdateToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Access Token
   *
   * @remarks
   * Update an access token.
   */
  async updateTokenForm(
    request: operations.AuthTokenUpdateApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.AuthTokenUpdateApiFormResponse> {
    return unwrapAsync(tokenOperationsUpdateTokenForm(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Access Token
   *
   * @remarks
   * Delete an access token.
   */
  async delete(
    request: operations.AuthTokenDeleteApiRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(tokenOperationsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Revoke Access Token
   *
   * @remarks
   * Revoke an access token.
   */
  async revokeToken(
    request: operations.AuthTokenRevokeApiRequest,
    options?: RequestOptions,
  ): Promise<operations.AuthTokenRevokeApiResponse> {
    return unwrapAsync(tokenOperationsRevokeToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Revoke Access Token
   *
   * @remarks
   * Revoke an access token.
   */
  async revokeTokenForm(
    request: operations.AuthTokenRevokeApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.AuthTokenRevokeApiFormResponse> {
    return unwrapAsync(tokenOperationsRevokeTokenForm(
      this,
      request,
      options,
    ));
  }
}
